FROM alpine:latest

RUN apk add --no-cache ca-certificates mailcap

RUN set -eux; \
        mkdir -p \
                /config/caddy \
                /data/caddy \
                /etc/caddy \
                /var/www/html \
                /usr/share/caddy \
        ; \
        wget -O /etc/caddy/Caddyfile "https://github.com/caddyserver/dist/raw/master/config/Caddyfile"; \
        wget -O /usr/share/caddy/index.html "https://github.com/caddyserver/dist/raw/master/welcome/index.html"

# https://github.com/caddyserver/caddy/releases
ENV CADDY_VERSION v2.3.0

RUN set -eux; \
        apkArch="$(apk --print-arch)"; \
        case "$apkArch" in \
                x86_64)  binArch='amd64'; checksum='7112a03bf341a4ccc5332b5ea715de9a68316d2aa2f468bdc263b192448ce412e002acfda68bd0606088b35c5de1f2e93f2aa64ccc065a039f87ee34e0b85b98' ;; \
                aarch64) binArch='arm64'; checksum='ef1e44293a935b05602524dbab96b51c862864b8a36c7de48b3329dab9b8a4b7d1930460868fded3afb3a74bdfb5a1c1c0ba46f1401edf648a370c0f7be8a05b' ;; \
                *) echo >&2 "error: unsupported architecture ($apkArch)"; exit 1 ;;\
        esac; \
        wget -O /tmp/caddy.tar.gz "https://github.com/caddyserver/caddy/releases/download/v2.3.0/caddy_2.3.0_linux_${binArch}.tar.gz"; \
        echo "$checksum  /tmp/caddy.tar.gz" | sha512sum -c; \
        tar x -z -f /tmp/caddy.tar.gz -C /usr/bin caddy; \
        rm -f /tmp/caddy.tar.gz; \
        chmod +x /usr/bin/caddy; \
        caddy version

# set up nsswitch.conf for Go's "netgo" implementation
# - https://github.com/docker-library/golang/blob/1eb096131592bcbc90aa3b97471811c798a93573/1.14/alpine3.12/Dockerfile#L9
RUN [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf

# See https://caddyserver.com/docs/conventions#file-locations for details
ENV XDG_CONFIG_HOME /config
ENV XDG_DATA_HOME /data

VOLUME /config
VOLUME /data
VOLUME /etc/caddy
VOLUME /var/www/html

EXPOSE 80
EXPOSE 443
EXPOSE 2019

CMD ["caddy", "run", "--config", "/etc/caddy/Caddyfile", "--adapter", "caddyfile"]


docker build -t caddy:v2 .


docker run -d -p 80:80 -p 443:443 --name caddy --restart=always -v /opt/caddy:/etc/caddy -v /var/www/html:/var/www/html caddy:v2


普通用户运行docker
sudo usermod -a -G docker $user


docker  “WARNING: No swap limit support”警告

解决方法

    编辑/etc/default/grub文件。

    vim /etc/default/grub

找到GRUB_CMDLINE_LINUX=配置项，并追加“cgroup_enable=memory swapaccount=1”。

sudo update-grub

#!/bin/bash
# 停止所有的容器
docker stop $(docker ps -a -q)
# 删除所有的容器
docker rm $(docker ps -a -q)
# 删除所有的镜像
docker rmi $(docker images -q)
